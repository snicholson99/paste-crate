[{"/Users/scott/code/projects/react/paste-crate/src/index.js":"1","/Users/scott/code/projects/react/paste-crate/src/App.js":"2","/Users/scott/code/projects/react/paste-crate/src/components/Clock/index.js":"3","/Users/scott/code/projects/react/paste-crate/src/components/Note/index.js":"4"},{"size":219,"mtime":1607807762418,"results":"5","hashOfConfig":"6"},{"size":3402,"mtime":1607974215941,"results":"7","hashOfConfig":"6"},{"size":641,"mtime":1607807952173,"results":"8","hashOfConfig":"6"},{"size":1769,"mtime":1607974201684,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1rnse5b",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"/Users/scott/code/projects/react/paste-crate/src/index.js",[],["20","21"],"/Users/scott/code/projects/react/paste-crate/src/App.js",[],"/Users/scott/code/projects/react/paste-crate/src/components/Clock/index.js",[],"/Users/scott/code/projects/react/paste-crate/src/components/Note/index.js",["22"],"import React, { Component } from \"react\";\n\nimport \"./style.css\";\n\nclass Note extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isShowingCopiedText: false,\n    };\n  }\n\n  onCopyToClipboardClick = () => {\n    navigator.clipboard.writeText(this.props.note);\n    this.setState({ isShowingCopiedText: true }, () => {\n      setTimeout(() => {\n        this.setState({ isShowingCopiedText: false });\n      }, 1500);\n    });\n  }\n\n  render() {\n    const { onCopyToClipboardClick } = this;\n    const { note, onNoteChange, noteTitle, onNoteTitleChange, noteIndex, deleteNote } = this.props;\n    const { isShowingCopiedText } = this.state;\n    return (\n      <div className=\"note\">\n        <input\n          onChange={(e) => onNoteTitleChange(e.target.value, noteIndex)}\n          value={noteTitle}\n          placeholder=\"Title\"\n          autoComplete=\"off\"\n          className=\"note-title\"\n        />\n        <textarea\n          type=\"text\"\n          onChange={(e) => onNoteChange(e.target.value, noteIndex)}\n          value={note}\n          placeholder=\"Note\"\n          autoComplete=\"off\"\n          className={`note-input note-${noteIndex}`}\n        />\n        <div className=\"note-options-flex-container\">\n          <div id=\"note-copy-container\" className=\"note-option-container\" onClick={onCopyToClipboardClick}>\n            <p className=\"note-label\">{isShowingCopiedText ? \"Copied!\" : \"Copy to Clipboard\"}</p>\n            <i className=\"note-icon fas fa-clipboard\"></i>\n          </div>\n          {/* <div id=\"note-delete-container\" className=\"note-option-container\" onClick={() => deleteNote(noteIndex)}>\n            <i className=\"note-icon fas fa-trash\"></i>\n          </div> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Note;",{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":24,"column":74,"nodeType":"29","messageId":"30","endLine":24,"endColumn":84},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"no-unused-vars","'deleteNote' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]