{"version":3,"sources":["components/Clock/index.js","components/Note/index.js","App.js","index.js"],"names":["Clock","props","state","time","moment","format","this","intervalID","setInterval","tick","clearInterval","setState","className","Component","Note","onCopyToClipboardClick","navigator","clipboard","writeText","note","isShowingCopiedText","setTimeout","onNoteChange","noteTitle","onNoteTitleChange","noteIndex","deleteNote","onChange","e","target","value","placeholder","autoComplete","type","id","onClick","App","currentState","noteData","localStorage","setItem","JSON","stringify","createNewNote","title","window","confirm","splice","getItem","parse","map","i","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.650a6360.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport moment from 'moment';\n\nimport './style.css';\n\nclass Clock extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      time: moment().format(\"HH:mm\"),\n    };\n  }\n  componentDidMount() {\n    this.intervalID = setInterval(\n      () => this.tick(),\n      1000\n    );\n  }\n  componentWillUnmount() {\n    clearInterval(this.intervalID);\n  }\n  tick() {\n    this.setState({\n      time: moment().format(\"HH:mm\")\n    });\n  }\n  render() {\n    const { time } = this.state;\n    return (\n      <p className=\"App-clock\">\n        {time}\n      </p>\n    );\n  }\n}\n\nexport default Clock;","import React, { Component } from \"react\";\n\nimport \"./style.css\";\n\nclass Note extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isShowingCopiedText: false,\n    };\n  }\n\n  onCopyToClipboardClick = () => {\n    navigator.clipboard.writeText(this.props.note);\n    this.setState({ isShowingCopiedText: true }, () => {\n      setTimeout(() => {\n        this.setState({ isShowingCopiedText: false });\n      }, 1500);\n    });\n  }\n\n  render() {\n    const { onCopyToClipboardClick } = this;\n    const { note, onNoteChange, noteTitle, onNoteTitleChange, noteIndex, deleteNote } = this.props;\n    const { isShowingCopiedText } = this.state;\n    return (\n      <div className=\"note\">\n        <input\n          onChange={(e) => onNoteTitleChange(e.target.value, noteIndex)}\n          value={noteTitle}\n          placeholder=\"Title\"\n          autoComplete=\"off\"\n          className=\"note-title\"\n        />\n        <textarea\n          type=\"text\"\n          onChange={(e) => onNoteChange(e.target.value, noteIndex)}\n          value={note}\n          placeholder=\"Note\"\n          autoComplete=\"off\"\n          className={`note-input note-${noteIndex}`}\n        />\n        <div className=\"note-options-flex-container\">\n          <div id=\"note-copy-container\" className=\"note-option-container\" onClick={onCopyToClipboardClick}>\n            <p className=\"note-label\">{isShowingCopiedText ? \"Copied!\" : \"Copy to Clipboard\"}</p>\n            <i className=\"note-icon fas fa-clipboard\"></i>\n          </div>\n          {/* <div id=\"note-delete-container\" className=\"note-option-container\" onClick={() => deleteNote(noteIndex)}>\n            <i className=\"note-icon fas fa-trash\"></i>\n          </div> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Note;","import { Component } from 'react';\n// import { scroller } from \"react-scroll\";\n\nimport Clock from './components/Clock';\nimport Note from './components/Note';\n\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      noteData: localStorage.getItem(\"noteData\") ? JSON.parse(localStorage.getItem(\"noteData\")) : [],\n    }\n  }\n  \n  onNoteChange = (value, noteIndex) => {\n    this.setState(currentState => {\n      let noteData = currentState.noteData;\n      noteData[noteIndex].note = value;\n      return {\n        noteData,\n      };\n    }, () => {\n      // update note in local storage\n      localStorage.setItem(\"noteData\", JSON.stringify(this.state.noteData));\n    })\n  };\n\n  onNoteTitleChange = (value, noteIndex) => {\n    this.setState(currentState => {\n      let noteData = currentState.noteData;\n      noteData[noteIndex].noteTitle = value;\n      return {\n        noteData,\n      };\n    }, () => {\n      // update note in local storage\n      localStorage.setItem(\"noteData\", JSON.stringify(this.state.noteData));\n    })\n  };\n\n  createNewNote = () => {\n    this.setState({ noteData: [...this.state.noteData, { title: '', note: '' }] }, () => {\n      // update notes in local storage\n      localStorage.setItem(\"noteData\", JSON.stringify(this.state.noteData));\n      // scroller.scrollTo(`note-${this.state.noteData.length - 1}`, {\n      //   duration: 1,\n      //   delay: 0,\n      //   smooth: \"easeInOutQuart\",\n      // });\n    })\n    // this.setState(currentState => {\n    //   let noteData = currentState.noteData;\n    //   noteData.push(\"\");\n    //   console.log(noteData);\n    //   return {\n    //     noteData,\n    //   };\n    // }, () => {\n    //   console.log(this.state.noteData.length);\n    //   // update notes in local storage\n    //   localStorage.setItem(\"noteData\", JSON.stringify(this.state.noteData));\n    //   // scroller.scrollTo(`note-${this.state.noteData.length - 1}`, {\n    //   //   duration: 1,\n    //   //   delay: 0,\n    //   //   smooth: \"easeInOutQuart\",\n    //   // });\n    // })\n  }\n\n  deleteNote = (noteIndex) => {\n    let confirmed = window.confirm(\"Are you sure you want to delete this note?\");\n    if (confirmed) {\n      this.setState(currentState => {\n        let noteData = currentState.noteData;\n        noteData.splice(noteIndex, 1);\n        return {\n          noteData,\n        };\n      }, () => {\n        // update notes in local storage\n        localStorage.setItem(\"noteData\", JSON.stringify(this.state.noteData));\n      });\n    }\n  }\n\n\n  render () {\n    const { noteData } = this.state;\n    const { onNoteChange, onNoteTitleChange, createNewNote, deleteNote } = this;\n    return (\n      <div className=\"App\">\n        <header>\n          <Clock />\n        </header>\n        <section className=\"section\">\n          {noteData.map((note, i) => (\n            <div key={i} className=\"note-container\">\n              <Note\n                noteIndex={i}\n                note={note.note}\n                noteTitle={note.noteTitle}\n                onNoteChange={onNoteChange}\n                onNoteTitleChange={onNoteTitleChange}\n                deleteNote={deleteNote}\n              />\n            </div>\n          ))}\n        </section>\n        <div className=\"new-note button\" onClick={createNewNote}>\n          <i className=\"fas fa-plus\"></i>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}